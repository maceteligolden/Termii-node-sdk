{"version":3,"file":"termii-node-sdk.cjs.development.js","sources":["../src/constants/api.ts","../src/util/api.ts","../src/services/Messaging/SendBulkMessage.ts","../src/services/Messaging/SendMessage.ts","../src/controllers/Messaging/Messaging.ts","../src/index.ts"],"sourcesContent":["export const API_URL = 'https://api.ng.termii.com/api';\r\n","import axios from 'axios';\r\nimport { API_URL } from '../constants/api';\r\n\r\nexport const TermiiApi = axios.create({\r\n    baseURL: API_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n})\r\n\r\nexport const setSecretKey = async (secretKey: string) => {\r\n    try {\r\n        TermiiApi.defaults.headers.common['Authorization'] = `Bearer ${secretKey}`\r\n    } catch {\r\n        throw new Error('Error occurred when setting secret key')\r\n    }\r\n}","import { API_URL } from \"../../constants/api\"\r\nimport { setSecretKey, TermiiApi } from \"../../util/api\"\r\nimport { ISendBulkMessage } from \"../../interfaces/services/Messaging\"\r\n\r\nexport const sendBulkMessage = async (args: ISendBulkMessage) => {\r\n\r\n    //adding secret key to header\r\n    setSecretKey(args.secret_key)\r\n\r\n    const payload = {\r\n        \"api_key\": args.api_key, \r\n        \"to\": args.to,\r\n        \"from\": args.from,\r\n        \"sms\": args.sms,\r\n        \"type\": args.type,\r\n        \"channel\": args.channel,\r\n    }\r\n\r\n    const response = await TermiiApi.post(`${API_URL}/sms/send/bulk`, payload)\r\n\r\n    return response?.data\r\n}","import { API_URL } from \"../../constants/api\"\r\nimport { ISendMessage } from \"../../interfaces/services/Messaging\"\r\nimport { setSecretKey, TermiiApi } from \"../../util/api\"\r\n\r\nexport const sendMessage = async (args: ISendMessage) => {\r\n\r\n    //adding secret key to header\r\n    setSecretKey(args.secret_key)\r\n\r\n    const payload = {\r\n        \"api_key\": args.api_key, \r\n        \"to\": args.to,\r\n        \"from\": args.from,\r\n        \"sms\": args.sms,\r\n        \"type\": args.type,\r\n        \"channel\": args.channel,\r\n        \"media\": args.media,\r\n        \"media.url\": args[\"media.url\"],\r\n        \"media.caption\": args[\"media.caption\"]\r\n    }\r\n\r\n    const response = await TermiiApi.post(`${API_URL}/sms/send`, payload)\r\n\r\n    return response?.data\r\n}","import { IMessage } from \"../../interfaces/controllers/Messaging\"\r\nimport { ISendBulkPayload, ISendPayload} from \"../../interfaces/services/Messaging\"\r\nimport { sendBulkMessage } from \"../../services/Messaging/SendBulkMessage\"\r\nimport { sendMessage } from \"../../services/Messaging/SendMessage\"\r\n\r\n\r\nexport default class Messaging implements IMessage {\r\n\r\n    api_key: string;\r\n    secret_key: string;\r\n\r\n    constructor(api_key: string, secret_key: string){\r\n        this.api_key = api_key;\r\n        this.secret_key = secret_key;\r\n    }\r\n\r\n    async sendMessage(args: ISendPayload): Promise<any> {\r\n        try {\r\n            return await sendMessage({\r\n                ...args,\r\n                api_key: this.api_key,\r\n                secret_key: this.secret_key\r\n            })\r\n        } catch (err){\r\n            return err\r\n        }\r\n    }\r\n\r\n    async sendBulkMessage(args: ISendBulkPayload): Promise<any> {\r\n        try {\r\n            return await sendBulkMessage({\r\n                ...args,\r\n                api_key: this.api_key,\r\n                secret_key: this.secret_key\r\n            })\r\n        } catch (err){\r\n            return err\r\n        }\r\n    }\r\n}","import Messaging from \"./controllers/Messaging/Messaging\";\r\n\r\nclass Termii {\r\n\r\n    api_key: string;\r\n    secret_key: string;\r\n\r\n    Messaging: Messaging\r\n\r\n    constructor(api_key: string, secret_key: string){\r\n        this.api_key = api_key;\r\n        this.secret_key = secret_key;\r\n        this.Messaging = new Messaging(api_key, secret_key);\r\n    }\r\n}\r\n\r\nexport default Termii;"],"names":["API_URL","TermiiApi","axios","create","baseURL","headers","setSecretKey","secretKey","defaults","common","Error","sendBulkMessage","args","secret_key","payload","api_key","to","from","sms","type","channel","post","response","data","sendMessage","media","Messaging","Termii"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,IAAMA,OAAO,GAAG,+BAAhB;;ACGA,IAAMC,SAAS,gBAAGC,KAAK,CAACC,MAAN,CAAa;EAClCC,OAAO,EAAEJ,OADyB;EAElCK,OAAO,EAAE;IACL,gBAAgB;;AAHc,CAAb,CAAlB;AAOP,AAAO,IAAMC,YAAY;EAAA,mFAAG,iBAAOC,SAAP;IAAA;MAAA;QAAA;UAAA;YAAA;YAEpBN,SAAS,CAACO,QAAV,CAAmBH,OAAnB,CAA2BI,MAA3B,CAAkC,eAAlC,gBAA+DF,SAA/D;YAFoB;YAAA;;UAAA;YAAA;YAAA;YAAA,MAId,IAAIG,KAAJ,CAAU,wCAAV,CAJc;;UAAA;UAAA;YAAA;;;;GAAH;;EAAA,gBAAZJ,YAAY;IAAA;;AAAA,GAAlB;;ACNA,IAAMK,eAAe;EAAA,mFAAG,iBAAOC,IAAP;IAAA;IAAA;MAAA;QAAA;UAAA;;YAG3BN,YAAY,CAACM,IAAI,CAACC,UAAN,CAAZ;YAEMC,OALqB,GAKX;cACZ,WAAWF,IAAI,CAACG,OADJ;cAEZ,MAAMH,IAAI,CAACI,EAFC;cAGZ,QAAQJ,IAAI,CAACK,IAHD;cAIZ,OAAOL,IAAI,CAACM,GAJA;cAKZ,QAAQN,IAAI,CAACO,IALD;cAMZ,WAAWP,IAAI,CAACQ;aAXO;YAAA;YAAA,OAcJnB,SAAS,CAACoB,IAAV,CAAkBrB,OAAlB,qBAA2Cc,OAA3C,CAdI;;UAAA;YAcrBQ,QAdqB;YAAA,iCAgBpBA,QAhBoB,oBAgBpBA,QAAQ,CAAEC,IAhBU;;UAAA;UAAA;YAAA;;;;GAAH;;EAAA,gBAAfZ,eAAe;IAAA;;AAAA,GAArB;;ACAA,IAAMa,WAAW;EAAA,mFAAG,iBAAOZ,IAAP;IAAA;IAAA;MAAA;QAAA;UAAA;;YAGvBN,YAAY,CAACM,IAAI,CAACC,UAAN,CAAZ;YAEMC,OALiB,GAKP;cACZ,WAAWF,IAAI,CAACG,OADJ;cAEZ,MAAMH,IAAI,CAACI,EAFC;cAGZ,QAAQJ,IAAI,CAACK,IAHD;cAIZ,OAAOL,IAAI,CAACM,GAJA;cAKZ,QAAQN,IAAI,CAACO,IALD;cAMZ,WAAWP,IAAI,CAACQ,OANJ;cAOZ,SAASR,IAAI,CAACa,KAPF;cAQZ,aAAab,IAAI,CAAC,WAAD,CARL;cASZ,iBAAiBA,IAAI,CAAC,eAAD;aAdF;YAAA;YAAA,OAiBAX,SAAS,CAACoB,IAAV,CAAkBrB,OAAlB,gBAAsCc,OAAtC,CAjBA;;UAAA;YAiBjBQ,QAjBiB;YAAA,iCAmBhBA,QAnBgB,oBAmBhBA,QAAQ,CAAEC,IAnBM;;UAAA;UAAA;YAAA;;;;GAAH;;EAAA,gBAAXC,WAAW;IAAA;;AAAA,GAAjB;;ICEcE;EAKjB,mBAAYX,OAAZ,EAA6BF,UAA7B;IACI,KAAKE,OAAL,GAAeA,OAAf;IACA,KAAKF,UAAL,GAAkBA,UAAlB;;;;;SAGEW;gGAAN,iBAAkBZ,IAAlB;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,OAEqBY,WAAW,cACjBZ,IADiB;gBAEpBG,OAAO,EAAE,KAAKA,OAFM;gBAGpBF,UAAU,EAAE,KAAKA;iBAL7B;;YAAA;cAAA;;YAAA;cAAA;cAAA;cAAA;;YAAA;YAAA;cAAA;;;;;;;;;;;;;SAYMF;oGAAN,kBAAsBC,IAAtB;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,OAEqBD,eAAe,cACrBC,IADqB;gBAExBG,OAAO,EAAE,KAAKA,OAFU;gBAGxBF,UAAU,EAAE,KAAKA;iBAL7B;;YAAA;cAAA;;YAAA;cAAA;cAAA;cAAA;;YAAA;YAAA;cAAA;;;;;;;;;;;;;;;;IC1BEc,SAOF,gBAAYZ,OAAZ,EAA6BF,UAA7B;EACI,KAAKE,OAAL,GAAeA,OAAf;EACA,KAAKF,UAAL,GAAkBA,UAAlB;EACA,KAAKa,SAAL,GAAiB,IAAIA,SAAJ,CAAcX,OAAd,EAAuBF,UAAvB,CAAjB;AACH;;;;"}